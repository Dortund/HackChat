<?php

namespace app\models;

class Backend_user extends \yii\db\ActiveRecord implements \yii\web\IdentityInterface
{
    public $id;
    public $username;
    public $password;
    public $authKey;
    public $is_admin;

 /**
     * @return string the name of the table associated with this ActiveRecord class.
     */
    public static function tableName()
    {
        return 'backend_user';
    }

	public function rules() {
		return [
			[['username', 'password'], 'required'],
		];

	}

    	 public static function findIdentity($id)
	 {
	 return static::findOne($id);
	 }
	 
	 public static function findIdentityByAccessToken($token, $type = null)
	 {
	 throw new NotSupportedException();//I don't implement this method because I don't have any access token column in my database
	 }
	 
	 public function getId()
	 {
	 return $this->id;
	 }
	 
	 public function getAuthKey()
	 {
	 return $this->authKey;//Here I return a value of my authKey column
	 }
	 
	 public function validateAuthKey($authKey)
	 {
	 return $this->authKey === $authKey;
	 }
	 public static function findByUsername($username)
	 {
	 return self::findOne(['username'=>$username]);
	 }
	 
	 public function validatePassword($password)
	 {
echo "asdfasdfasdfasdfasdfasdf<br><br><br><br><br><br><br><br><br>asdf;lafdal;fkja;lsjfk<br>";
echo $password . " --- " . $this->password;
	 return $this->password === $password;
	 }
}
